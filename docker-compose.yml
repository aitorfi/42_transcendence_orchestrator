services:
  frontend:
    container_name: frontend
    build: ./frontend
    image: frontend
    ports:
      - 49999:80
    restart: unless-stopped

  user_management_api:
    container_name: user_management_api
    build: ./user_management
    image: user_management_api
    environment:
      JWT_SECRET_KEY: "en la playa se esta mejor que aqui"
    ports:
      - 50000:8080
    depends_on:
      - user_management_db
    restart: unless-stopped
    networks:
      - user_management_net

  user_management_db:
    container_name: user_management_db
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: api-db
    restart: unless-stopped
    networks:
      - user_management_net

  multiplayer_service:
    container_name: multiplayer_service
    build: ./multiplayer
    image: multiplayer_service
    environment:
      JWT_SECRET_KEY: "en la playa se esta mejor que aqui"
    ports:
      - 50001:8080
    restart: unless-stopped

networks:
  user_management_net:
    driver: bridge
